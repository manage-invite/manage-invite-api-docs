openapi: 3.0.0

info:
  title: ManageInvite API
  description: The official API of the [ManageInvite Discord BOT](https://manage-invite.xyz).
  version: 1.0.0

security:
  - bearerAuth: []

servers:
  - url: https://api.manage-invite.xyz
    description: Officiel ManageInvite Server
  - url: http://localhost:3300
    description: Localhost server (for development)

paths:
  /guilds/{guildId}/settings:
    get:
      tags:
        - Guild
      summary: Returns the settings of a specific guild
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to get the settings of
      responses:
        "200":
          description: The guild settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuildSettings"
    post:
      tags:
        - Guild
      summary: Update the settings of a specific guild
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to update the settings of
      requestBody:
        description: The new guild settings
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GuildSettings"
      responses:
        "200":
          description: The updated guild settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuildSettings"
  /guilds/{guildId}/plugins:
    get:
      tags:
        - Guild
      summary: Returns the plugins of a specific guild
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to get the plugins of
      responses:
        "200":
          description: The guild plugins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GuildPlugin"
  /guilds/{guildId}/plugins/{pluginName}:
    post:
      tags:
        - Guild
      summary: Update a specific plugin of a guild
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to update the plugin of
        - in: path
          name: pluginName
          schema:
            type: string
          required: true
          description: The name of the plugin you want to update
      responses:
        "200":
          description: The new guild plugins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GuildPlugin"
  /guilds/{guildId}/blacklisted:
    get:
      tags:
        - Guild
      summary: Returns the blacklisted users of the guild
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to get the blacklisted users of
      responses:
        "200":
          description: The guild blacklisted users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Guild
      summary: Blacklists new users
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to blacklist the user on
      requestBody:
        description: The IDs of the users you want to blacklist
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: The guild blacklisted users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    delete:
      tags:
        - Guild
      summary: Unblacklist blacklisted users
      parameters:
        - in: path
          name: guildId
          schema:
            type: string
          required: true
          description: The ID of the guild you want to un-blacklist the user on
      requestBody:
        description: The IDs of the users you want to un-blacklist
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: The guild blacklisted users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CountGuildInvites:
      type: object
      properties:
        leaves:
          type: integer
        regular:
          type: integer
        fake:
          type: integer
        bonus:
          type: integer
    GuildStorage:
      type: object
      properties:
        guildID:
          type: string
        storageID:
          type: string
        createdAt:
          type: integer
    GuildSubscription:
      type: object
      properties:
        id:
          type: string
        expiresAt:
          type: string
        createdAt:
          type: string
        subLabel:
          type: string
        guildsCount:
          type: integer
        patreonUserID:
          type: string
        cancelled:
          type: boolean
        subInvalidated:
          type: boolean
    SubscriptionPayment:
      type: object
      properties:
        id:
          type: string
        payerDiscordID:
          type: string
        amount:
          type: integer
        createdAt:
          type: string
        type:
          type: string
        transactionID:
          type: string
        details:
          type: object
        modDiscordID:
          type: string
        signupID:
          type: string
        payerEmail:
          type: string
        payerDiscordUsername:
          type: string
    GuildSettings:
      type: object
      properties:
        guildID:
          type: string
        storageID:
          type: string
        language:
          type: string
        prefix:
          type: string
        keepRanks:
          type: boolean
        stackedRanks:
          type: boolean
        cmdChannel:
          type: string
        fakeThreshold:
          type: integer
    PremiumStatus:
      type: object
      properties:
        guildID:
          type: string
        isPremium:
          type: boolean
        isTrial:
          type: boolean
    GuildSubscriptionStatus:
      type: object
      properties:
        isPayPal:
          type: boolean
        isCancelled:
          type: boolean
    GuildRank:
      type: object
      properties:
        guildID:
          type: string
        roleID:
          type: string
        inviteCount:
          type: integer
    GuildPlugin:
      type: object
      properties:
        guildID:
          type: string
        pluginName:
          type: string
        pluginData:
          type: object
    UserLeaderboardEntry:
      type: object
      properties:
        userID:
          type: string
        invites:
          type: integer
        regular:
          type: integer
        leaves:
          type: integer
        bonus:
          type: integer
        fake:
          type: integer
    GuildMember:
      type: object
      properties:
        userID:
          type: string
        guildID:
          type: string
        storageID:
          type: string
        fake:
          type: integer
        leaves:
          type: integer
        bonus:
          type: integer
        regular:
          type: integer
        notCreated:
          type: boolean
        invites:
          type: integer
    GuildMemberEvent:
      type: object
      properties:
        userID:
          type: string
        guildID:
          type: string
        eventType:
          type: string
          example: join, leave
        eventDate:
          type: integer
        joinType:
          type: string
          example: normal, oauth, vanity, perm, unknown
        inviterID:
          type: string
        inviteData:
          type: object
        storageID:
          type: string
        joinFake:
          type: boolean
    TransactionData:
      type: object
      properties:
        subID:
          type: string
        guildID:
          type: string
    NewlyCancelledPayment:
      type: object
      properties:
        payerDiscordID:
          type: string
        subID:
          type: string
        paymentID:
          type: string
        guildID:
          type: string
        subLabel:
          type: string
